name: Backend CI/CD

on:
  push:
    branches: [ main, master ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: expense_tracker_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'
        cache: true
        cache-dependency-path: backend/go.sum
        
    - name: Install dependencies
      run: |
        cd backend
        go mod download
        
    - name: Run linting
      run: |
        cd backend
        go vet ./...
        golangci-lint run
        
    - name: Run tests
      run: |
        cd backend
        go test -v ./...
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/expense_tracker_test?sslmode=disable
        
    - name: Build application
      run: |
        cd backend
        go build -o expense-tracker-api ./cmd/server
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: backend-binary
        path: backend/expense-tracker-api
        retention-days: 7

  docker-build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image
      run: |
        cd backend
        docker build -t expense-tracker-api:${{ github.sha }} .
        docker build -t expense-tracker-api:latest .
        
    - name: Upload Docker image
      uses: actions/upload-artifact@v4
      with:
        name: docker-image
        path: backend/expense-tracker-api
        retention-days: 7

  deploy:
    needs: [test, docker-build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'
        
    - name: Build for production
      run: |
        cd backend
        CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -installsuffix cgo -o expense-tracker-api ./cmd/server
        
    # Add deployment steps here based on your hosting platform
    # Example for AWS ECS:
    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v4
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: us-east-1
    #     
    # - name: Deploy to ECS
    #   run: |
    #     aws ecs update-service --cluster expense-tracker-cluster --service expense-tracker-service --force-new-deployment
        
    # Example for Google Cloud Run:
    # - name: Setup Google Cloud CLI
    #   uses: google-github-actions/setup-gcloud@v2
    #   with:
    #     project_id: ${{ secrets.GCP_PROJECT_ID }}
    #     service_account_key: ${{ secrets.GCP_SA_KEY }}
    #     
    # - name: Deploy to Cloud Run
    #   run: |
    #     gcloud run deploy expense-tracker-api --source backend --platform managed --region us-central1 --allow-unauthenticated 